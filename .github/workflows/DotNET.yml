name: DotNET Build

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install dotnet tools
        run: |
          dotnet tool install dotnet-sonarscanner -g
          dotnet tool install --global dotnet-coverage

      - name: "[npm] Restore"
        working-directory: src/Serilog.Ui.Web/
        run: |
          npm ci
          npm run build

      - name: "[DotNET] Restore"
        run: dotnet restore

      - name: SonarCloud Scan - Start
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
          /k:"followynne_serilog-ui" \
          /o:"followynne" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.sources=src/ \
          /d:sonar.exclusions=src/Serilog.Ui.Web/assets/**/*,src/Serilog.Ui.Web/wwwroot/**/*,src/Serilog.Ui.Web/node_modules/**/*,src/Serilog.Ui.Web/*.js,src/Serilog.Ui.Web/*.json  \
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        continue-on-error: true
        run: dotnet-coverage collect -f xml -o "coverage.xml" dotnet test --no-build --logger "trx;LogFileName=test-results.trx"

      - name: SonarCloud Scan - Stop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Reporter
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: DotNET - Tests
          path: '**/test-results.trx'
          reporter: dotnet-trx
          fail-on-error: false
