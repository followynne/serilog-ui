# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:

  push:
    branches: ['master', 'dev']
  pull_request:
    branches: ['master', 'dev']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir .\.sonar\scanner
          dotnet tool install dotnet-sonarscanner -g

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install NPM deps
        working-directory: src/Serilog.Ui.Web/
        run: npm i

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"followynne_serilog-ui" /o:"followynne" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

          cd src/Serilog.Ui.Web/
          npm run build
          cd ../..
          dotnet build --no-restore

          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Test CSharp
        run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" || true

      - name: Test UI Assets
        working-directory: src/Serilog.Ui.Web/
        run: npm run test:ci

      - name: Test Reporter
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: DotNET Tests
          path: '**/test-results.trx'
          reporter: dotnet-trx

      - name: Test Report
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: '**/jest-*.xml'    # Path to test results
          reporter: jest-junit        # Format of test results
